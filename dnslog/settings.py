"""
Django settings for dnslog project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import logging
import django.utils.log

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# print(BASE_DIR)
# BASE_LOG_DIR = os.path.join(BASE_DIR, "log")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=ni)^=sz6jogjy2-lm&v)uxl+k_r3&+iv6alq($4#(&9=v$bx)'
SECURE_SSL_REDIRECT = False
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['.sqvds.cn']
ALLOWED_HOSTS = ['*']

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'formatters': {
#        'standard': {
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'
#         },
#         'simple': {
#             'format': '[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s'
#         },
#         'collect': {
#             'format': '%(message)s'
#         }
#     },
#     'filters': {
#     },
#     'handlers': {
#         'default': {
#             'level':'INFO',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_LOG_DIR, 'all.log'),     #日志输出文件
#             'maxBytes': 1024 * 1024 * 5,                  #文件大小 
#             'backupCount': 5,                         #备份份数
#             'formatter':'collect',                   #使用哪种formatters日志格式
#         },
#         'error': {
#             'level':'ERROR',
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_LOG_DIR, 'error.log'),
#             'maxBytes':1024 * 1024 * 5,
#             'backupCount': 5,
#             'formatter':'standard',
#         },
#         'console':{
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard'
#         },

#         # 'request_handler': {
#         #     'level':'DEBUG',
#         #     'class':'logging.handlers.RotatingFileHandler',
#         #     'filename': '/sourceDns/log/script.log', 
#         #     'maxBytes': 1024*1024*5, 
#         #     'backupCount': 5,
#         #     'formatter':'standard',
#         # },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['default'],
#             'level': 'DEBUG',
#             'propagate': False 
#         },
#     } 
# }

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'logview.apps.LogviewConfig',
    'api.apps.ApiConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dnslog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dnslog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }

  # }
'default': {
        'ENGINE': 'django.db.backends.mysql',
       'NAME': 'dnslog',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',
        'PORT': '3306',
    }

}


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# DNS_DOMAIN = 'sqvds.cn'
DNS_DOMAIN = 'localhost'
# ADMIN_DOMAIN = 'admin.sqvds.cn'
ADMIN_DOMAIN = 'localhost'


NS1_DOMAIN = 'localhost'
NS2_DOMAIN = 'localhost'

SERVER_IP = '127.0.0.1'


#=========================================
# 以下为优化手段, 表api_apikey里面的信息，请匹配使用，不然会出错。

# 匹配的子域名将会把记录存放在redis中
FAST_SUBDOMAIN = 'sec'
FAST_USERNAME = 'root'
FAST_USERID = 1
# 这个token硬编码， 请对应使用。
FAST_API_TOKEN = '84dae1f9eea20c10ef70c0f78945d277'
#=========================================


MESSAGE_EXPIRE_TIME = 60*60*1 # 存在redis中的记录过期时间「1天过期」
